//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let entitlements = entitlements()
  let reuseIdentifier = reuseIdentifier()

  var color: color { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.color` struct is generated, and contains static references to 1 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }
  }

  /// This `_R.entitlements` struct is generated, and contains static references to 0 properties.
  struct entitlements {
    let comAppleSecurityAppSandbox: Bool = true
    let comAppleSecurityNetworkClient: Bool = true
  }

  /// This `_R.nib` struct is generated, and contains static references to 11 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `ArtistDetailTableViewCell`.
    var artistDetailTableViewCell: RswiftResources.NibReferenceReuseIdentifier<ArtistDetailTableViewCell, ArtistDetailTableViewCell> { .init(name: "ArtistDetailTableViewCell", bundle: bundle, identifier: "ArtistDetailTableViewCell") }

    /// Nib `ArtistDetailView`.
    var artistDetailView: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ArtistDetailView", bundle: bundle) }

    /// Nib `ArtistTableViewCell`.
    var artistTableViewCell: RswiftResources.NibReferenceReuseIdentifier<ArtistTableViewCell, ArtistTableViewCell> { .init(name: "ArtistTableViewCell", bundle: bundle, identifier: "ArtistTableViewCell") }

    /// Nib `ArtistsListView`.
    var artistsListView: RswiftResources.NibReference<UIKit.UIView> { .init(name: "ArtistsListView", bundle: bundle) }

    /// Nib `CharacterDetailMarvelTableViewCell`.
    var characterDetailMarvelTableViewCell: RswiftResources.NibReferenceReuseIdentifier<CharacterDetailMarvelTableViewCell, CharacterDetailMarvelTableViewCell> { .init(name: "CharacterDetailMarvelTableViewCell", bundle: bundle, identifier: "CharacterDetailMarvelTableViewCell") }

    /// Nib `CharacterDetailMarvelView`.
    var characterDetailMarvelView: RswiftResources.NibReference<UIKit.UIView> { .init(name: "CharacterDetailMarvelView", bundle: bundle) }

    /// Nib `CharacterListMarvelTableViewCell`.
    var characterListMarvelTableViewCell: RswiftResources.NibReferenceReuseIdentifier<CharacterListMarvelTableViewCell, CharacterListMarvelTableViewCell> { .init(name: "CharacterListMarvelTableViewCell", bundle: bundle, identifier: "CharacterListMarvelTableViewCell") }

    /// Nib `CharactersListMarvelView`.
    var charactersListMarvelView: RswiftResources.NibReference<UIKit.UIView> { .init(name: "CharactersListMarvelView", bundle: bundle) }

    /// Nib `CharactersListRickMortyTableViewCell`.
    var charactersListRickMortyTableViewCell: RswiftResources.NibReferenceReuseIdentifier<CharactersListRickMortyTableViewCell, CharactersListRickMortyTableViewCell> { .init(name: "CharactersListRickMortyTableViewCell", bundle: bundle, identifier: "CharactersListRickMortyTableViewCell") }

    /// Nib `CharactersListRickMortyView`.
    var charactersListRickMortyView: RswiftResources.NibReference<UIKit.UIView> { .init(name: "CharactersListRickMortyView", bundle: bundle) }

    /// Nib `InitialSelectionView`.
    var initialSelectionView: RswiftResources.NibReference<UIKit.UIView> { .init(name: "InitialSelectionView", bundle: bundle) }

    func validate() throws {

    }
  }

  /// This `_R.reuseIdentifier` struct is generated, and contains static references to 5 reuse identifiers.
  struct reuseIdentifier {

    /// Reuse identifier `ArtistDetailTableViewCell`.
    let artistDetailTableViewCell: RswiftResources.ReuseIdentifier<ArtistDetailTableViewCell> = .init(identifier: "ArtistDetailTableViewCell")

    /// Reuse identifier `ArtistTableViewCell`.
    let artistTableViewCell: RswiftResources.ReuseIdentifier<ArtistTableViewCell> = .init(identifier: "ArtistTableViewCell")

    /// Reuse identifier `CharacterDetailMarvelTableViewCell`.
    let characterDetailMarvelTableViewCell: RswiftResources.ReuseIdentifier<CharacterDetailMarvelTableViewCell> = .init(identifier: "CharacterDetailMarvelTableViewCell")

    /// Reuse identifier `CharacterListMarvelTableViewCell`.
    let characterListMarvelTableViewCell: RswiftResources.ReuseIdentifier<CharacterListMarvelTableViewCell> = .init(identifier: "CharacterListMarvelTableViewCell")

    /// Reuse identifier `CharactersListRickMortyTableViewCell`.
    let charactersListRickMortyTableViewCell: RswiftResources.ReuseIdentifier<CharactersListRickMortyTableViewCell> = .init(identifier: "CharactersListRickMortyTableViewCell")
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var launchScreen: launchScreen { .init(bundle: bundle) }
    var main: main { .init(bundle: bundle) }

    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func main(bundle: Foundation.Bundle) -> main {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.launchScreen.validate()
      try self.main.validate()
    }


    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {

      }
    }

    /// Storyboard `Main`.
    struct main: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = ViewController

      let bundle: Foundation.Bundle

      let name = "Main"
      func validate() throws {

      }
    }
  }
}