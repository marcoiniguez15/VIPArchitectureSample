//
//  CharactersListMarvelRouter.swift
//  VIPArchitectureSample
//
//  Created by marco.iniguez.ollero on 5/7/21.
//  Copyright (c) 2021 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit

protocol CharactersListMarvelRouting {
  
  func routeTo(_ route: CharactersListMarvelModel.Route)
}

final class CharactersListMarvelRouter {
  
  private weak var viewController: UIViewController?
  public var router: MarvelRouter = MarvelRouter.shared

  init(viewController: UIViewController?) {
    self.viewController = viewController
  }
}


// MARK: - CharactersListMarvelRouting
extension CharactersListMarvelRouter: CharactersListMarvelRouting {
  
  func routeTo(_ route: CharactersListMarvelModel.Route) {
    DispatchQueue.main.async {
      switch route {
        
      case let .showCharacterDetailMarvel(id):
        self.showCharacterDetailMarvel(id: id)
        
      case let .showError(model):
        self.showErrorAlert(viewModel: model)
      }
    }
  }
}


// MARK: - Private Zone
private extension CharactersListMarvelRouter {
  
  func showErrorAlert(viewModel: ErrorModel) {
      guard let vc = self.viewController else {
          return
      }
      router.showError(sourceViewController: vc, model: viewModel)
  }
  
  func showCharacterDetailMarvel(id: Int) {
      guard let vc = self.viewController else {
          return
      }
      router.routeToCharacterDetail(sourceViewController: vc, characterId: id)
  }
}
