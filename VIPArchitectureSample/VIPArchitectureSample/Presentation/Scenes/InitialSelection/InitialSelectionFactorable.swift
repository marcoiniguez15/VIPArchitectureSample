//
//  InitialSelectionFactorable.swift
//  VIPArchitectureSample
//
//  Created by marco.iniguez.ollero on 23/2/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit


extension AppInjector {
  
  struct InitialSelectionInjector {}
}

extension AppInjector.InitialSelectionInjector: InitialSelectionFactorable {}

protocol InitialSelectionFactorable: InitialSelectionInteractorFactorable, InitialSelectionPresenterFactorable, InitialSelectionRouterFactorable, InitialSelectionServicesFactorable { }

protocol InitialSelectionInteractorFactorable {
  typealias InteractableFactory = InitialSelectionPresenterFactorable & InitialSelectionServicesFactorable
  
  func makeInteractor(factory: InteractableFactory, viewController: InitialSelectionDisplayLogic?, dataSource: InitialSelectionModel.DataSource) -> InitialSelectionInteractable
}

protocol InitialSelectionPresenterFactorable {
  func makePresenter(viewController: InitialSelectionDisplayLogic?) -> InitialSelectionPresentationLogic
}

protocol InitialSelectionRouterFactorable {
  func makeRouter(viewController: UIViewController?) -> InitialSelectionRouting
}

extension InitialSelectionFactorable {
  
  func makeInteractor(factory: InteractableFactory, viewController: InitialSelectionDisplayLogic?, dataSource: InitialSelectionModel.DataSource) -> InitialSelectionInteractable {
    InitialSelectionInteractor(factory: factory, viewController: viewController, dataSource: dataSource)
  }
  
  func makePresenter(viewController: InitialSelectionDisplayLogic?) -> InitialSelectionPresentationLogic {
    InitialSelectionPresenter(viewController: viewController)
  }
  
  func makeRouter(viewController: UIViewController?) -> InitialSelectionRouting {
    InitialSelectionRouter(viewController: viewController)
  }
}


// MARK: - Service Factorable
protocol InitialSelectionServicesFactorable {
  
  //func makeXService() -> xService
}

extension InitialSelectionServicesFactorable {
  
  //func makeXService() -> xService {
  //   xService()
  //}
}
