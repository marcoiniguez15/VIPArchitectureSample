//
//  ArtistDetailFactorable.swift
//  VIPArchitectureSample
//
//  Created by marco.iniguez.ollero on 24/2/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit


extension AppInjector {
  
  struct ArtistDetailInjector {}
}

extension AppInjector.ArtistDetailInjector: ArtistDetailFactorable {}

protocol ArtistDetailFactorable: ArtistDetailInteractorFactorable, ArtistDetailPresenterFactorable, ArtistDetailRouterFactorable, ArtistDetailServicesFactorable { }

protocol ArtistDetailInteractorFactorable {
  typealias InteractableFactory = ArtistDetailPresenterFactorable & ArtistDetailServicesFactorable
  
  func makeInteractor(factory: InteractableFactory, viewController: ArtistDetailDisplayLogic?, dataSource: ArtistDetailModel.DataSource) -> ArtistDetailInteractable
}

protocol ArtistDetailPresenterFactorable {
  func makePresenter(viewController: ArtistDetailDisplayLogic?) -> ArtistDetailPresentationLogic
}

protocol ArtistDetailRouterFactorable {
  func makeRouter(viewController: UIViewController?) -> ArtistDetailRouting
}

extension ArtistDetailFactorable {
  
  func makeInteractor(factory: InteractableFactory, viewController: ArtistDetailDisplayLogic?, dataSource: ArtistDetailModel.DataSource) -> ArtistDetailInteractable {
    ArtistDetailInteractor(factory: factory, viewController: viewController, dataSource: dataSource)
  }
  
  func makePresenter(viewController: ArtistDetailDisplayLogic?) -> ArtistDetailPresentationLogic {
    ArtistDetailPresenter(viewController: viewController)
  }
  
  func makeRouter(viewController: UIViewController?) -> ArtistDetailRouting {
    ArtistDetailRouter(viewController: viewController)
  }
}


// MARK: - Service Factorable
protocol ArtistDetailServicesFactorable {
  
  func makeApiService() -> APIClientProtocol
}

extension ArtistDetailServicesFactorable {
  
  
  func makeApiService() -> APIClientProtocol {
    APIClient.shared
  }
}
