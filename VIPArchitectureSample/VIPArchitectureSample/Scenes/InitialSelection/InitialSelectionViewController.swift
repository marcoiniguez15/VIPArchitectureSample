//
//  InitialSelectionViewController.swift
//  VIPArchitectureSample
//
//  Created by marco.iniguez.ollero on 23/2/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the VIP Swift Xcode Templates(https://github.com/Andrei-Popilian/VIP_Design_Xcode_Template)
//  so you can apply clean architecture to your iOS and MacOS projects,
//  see more http://clean-swift.com
//

import UIKit

protocol InitialSelectionDisplayLogic where Self: UIViewController {
  
  func displayViewModel(_ viewModel: InitialSelectionModel.ViewModel)
}

final class InitialSelectionViewController: BaseViewController {
  
  typealias InitialSelectionFactory = InitialSelectionInteractorFactorable & InitialSelectionRouterFactorable

  private let mainView: InitialSelectionView
  private var interactor: InitialSelectionInteractable!
  private var router: InitialSelectionRouting!
  override var isNavigationBarHidden: Bool { false }

  
  required init(factory: InitialSelectionFactory, mainView: InitialSelectionView, dataSource: InitialSelectionModel.DataSource) {
    self.mainView = mainView
    
    super.init(nibName: nil, bundle: nil)
    
    let interactorFactory = factory as! InitialSelectionInteractorFactorable.InteractableFactory
    interactor = factory.makeInteractor(factory: interactorFactory, viewController: self, dataSource: dataSource)
    router = factory.makeRouter(viewController: self)
  }
  
  override func viewDidLoad() {
    super.viewDidLoad()
    interactor.doRequest(.prepareOptions)
  }
  
  override func loadView() {
    mainView.delegate = self
    view = mainView
  }

  @available(*, unavailable)
  required init?(coder: NSCoder) {
    fatalError("init(coder:) has not been implemented, You shouldn't initialize the ViewController using Storyboards")
  }
}

// MARK: - InitialSelectionDisplayLogic
extension InitialSelectionViewController: InitialSelectionDisplayLogic {

  func displayViewModel(_ viewModel: InitialSelectionModel.ViewModel) {
    DispatchQueue.main.async {
      switch viewModel {

      case .prepareOptions(let viewModel):
        self.navigationItem.title = viewModel.title
        self.navigationItem.backBarButtonItem = UIBarButtonItem(title: "", style: .plain, target: nil, action: nil)
        self.mainView.updateDataSource(with: viewModel)
      }
    }
  }
}


// MARK: - InitialSelectionViewDelegate
extension InitialSelectionViewController: InitialSelectionViewDelegate {
  func lastFMPressed() {
    router.routeTo(.showLastFMFlow)
  }
  
  func rickMortyPressed() {
    router.routeTo(.showRickMortyFlow)
  }
}


// MARK: - Private Zone
private extension InitialSelectionViewController {
  
}
